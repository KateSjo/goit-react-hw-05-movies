{"version":3,"sources":["components/ActorsDetails/ActorsDetails.module.css","components/PersonDetails/PersonDetails.module.css","components/ActorsDetails/ActorsDetails.js","components/PersonDetails/PersonDetails.js","components/Modal/ModalPerson.js","views/ActorsViews.js"],"names":["module","exports","ActorsDetails","actors","onModalOpen","length","className","s","gallery","map","id","character","name","profile_path","foto","oskar","item","card","onClick","container","src","alt","PersonDetails","person","biography","birthday","place_of_birth","data","poster","image","details","title","list","meaning","value","overview","overviewText","ModalPerson","personId","useState","setPerson","error","setError","useEffect","FilmsApi","then","catch","message","ActorsPage","setActors","modalShow","setModalShow","modalValue","setModalValue","actorsId","useParams","slug","match","cast","toggleModal","Modal","onClose"],"mappings":"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","file":"static/js/actors-view.a01fc53f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"gallery\":\"ActorsDetails_gallery__2fxuL\",\"item\":\"ActorsDetails_item__2RwaL\",\"card\":\"ActorsDetails_card__3VFVR\",\"container\":\"ActorsDetails_container__anfva\",\"name\":\"ActorsDetails_name__2WSsV\",\"character\":\"ActorsDetails_character__2f2CP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"PersonDetails_card__3o7e0\",\"data\":\"PersonDetails_data__3Kf8F\",\"poster\":\"PersonDetails_poster__20NHV\",\"title\":\"PersonDetails_title__Socs4\",\"image\":\"PersonDetails_image__1H3tJ\",\"tagline\":\"PersonDetails_tagline__2REpK\",\"details\":\"PersonDetails_details__2WocY\",\"list\":\"PersonDetails_list__3804B\",\"item\":\"PersonDetails_item__1i29g\",\"meaning\":\"PersonDetails_meaning__1wrQE\",\"value\":\"PersonDetails_value__2JPp9\",\"overviewText\":\"PersonDetails_overviewText__1HpHK\"};","import PropTypes from 'prop-types';\r\nimport s from \"./ActorsDetails.module.css\";\r\nimport oskar from '../../images/oskar.jpg'\r\n\r\n\r\nconst ActorsDetails = ({ actors, onModalOpen }) => {\r\n    const IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\r\n    if (actors.length === 0) {\r\n        return <h2>Sorry, we haven't actors yet</h2>\r\n    }\r\n    return (\r\n        <ul className={s.gallery}>\r\n            {actors.map(({ id, character, name, profile_path }) => {\r\n                const foto = profile_path === null ? oskar : `${IMAGE_URL}${profile_path}`;\r\n\r\n                return (\r\n                    <li className={s.item} key={id}>\r\n                        <div className={s.card} onClick={() => onModalOpen(id)}>\r\n                            <img className={s.container} src={foto} alt={name} />\r\n                            <div>\r\n                                <p className={s.name}>{name}</p>\r\n                                <p className={s.character}>{character}</p>\r\n                            </div>\r\n                        </div>\r\n                    </li>\r\n                )\r\n            })}\r\n        </ul>\r\n    );\r\n};\r\n\r\nActorsDetails.propTypes = {\r\n    actors: PropTypes.arrayOf(PropTypes.shape({\r\n        id: PropTypes.number.isRequired,\r\n        character: PropTypes.string,\r\n        name: PropTypes.string,\r\n        profile_path: PropTypes.string,\r\n    })),\r\n    onModalOpen: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ActorsDetails;","import PropTypes from 'prop-types';\r\nimport s from \"./PersonDetails.module.css\";\r\n\r\nconst PersonDetails = ({ person: { biography, birthday, name, place_of_birth, profile_path } }) => {\r\n    const IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\r\n\r\n    return (\r\n        <div className={s.data}>\r\n            <div className={s.poster}>\r\n                <img className={s.image} src={IMAGE_URL + profile_path} alt={name} />\r\n            </div>\r\n            <div className={s.details}>\r\n                <h1 className={s.title}>{name}</h1>\r\n                <ul className={s.list}>\r\n                    <li className={s.item}>\r\n                        <span className={s.meaning}>Birthday:</span>\r\n                        <span className={s.value}>{birthday}</span>\r\n                    </li>\r\n                    <li className={s.item}>\r\n                        <span className={s.meaning}>Place of birth:</span>\r\n                        <span className={s.value}>{place_of_birth}</span>\r\n                    </li>\r\n                </ul>\r\n                <div className={s.overview}>\r\n                    <h3>Biography:</h3>\r\n                    <p className={s.overviewText}>{biography}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nPersonDetails.propTypes = {\r\n    person: PropTypes.shape({\r\n        biography: PropTypes.string,\r\n        birthday: PropTypes.string,\r\n        name: PropTypes.string,\r\n        place_of_birth: PropTypes.string,\r\n        profile_path: PropTypes.string,\r\n    }),\r\n};\r\n\r\nexport default PersonDetails;","import { useState, useEffect } from 'react';\r\nimport * as FilmsApi from \"../../service/apiFilmsService\";\r\nimport PersonDetails from \"../PersonDetails\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ModalPerson = ({ personId }) => {\r\n    const [person, setPerson] = useState(null)\r\n    const [error, setError] = useState('')\r\n\r\n    useEffect(() => {\r\n        FilmsApi\r\n            .fetchPerson(personId)\r\n            .then(setPerson)\r\n            .catch(error => setError(error))\r\n    }, [personId]);\r\n    \r\n    return (\r\n        <>\r\n            {person ? <PersonDetails person={person} /> : <h2>{error.message}</h2>}\r\n        </>\r\n    );\r\n};\r\n\r\nModalPerson.propTypes = {\r\n    personId: PropTypes.number.isRequired,\r\n}\r\n\r\nexport default ModalPerson;","import { useParams } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\nimport ActorsDetails from \"../components/ActorsDetails\";\r\nimport Modal from \"../components/Modal\";\r\nimport ModalPerson from \"../components/Modal/ModalPerson\";\r\nimport * as FilmsApi from \"../service/apiFilmsService\";\r\n\r\nconst ActorsPage = () => {\r\n    const [actors, setActors] = useState(null);\r\n    const [error, setError] = useState('');\r\n    const [modalShow, setModalShow] = useState(false);\r\n    const [modalValue, setModalValue] = useState('');\r\n    const { slug } = useParams();\r\n    const actorsId = slug.match(/[a-zA-Z0-9]+$/)[0];\r\n    \r\n    useEffect(() => {\r\n        FilmsApi\r\n        .fetchActorsMovie(actorsId)\r\n        .then(({ cast }) => setActors(cast))\r\n        .catch(error => setError(error))\r\n    }, [actorsId]);\r\n\r\n    const toggleModal = (value) => {\r\n        setModalShow(!modalShow);\r\n        setModalValue(value);\r\n    };\r\n    \r\n    return (\r\n        <>\r\n            {error && <h1>{error.message}</h1>}\r\n            {actors && <ActorsDetails actors={actors} onModalOpen={toggleModal}/>}\r\n            {modalShow &&\r\n                (\r\n                <Modal\r\n                    onClose={toggleModal}\r\n                >\r\n                    <ModalPerson personId={modalValue}/>\r\n                    </Modal>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ActorsPage;"],"sourceRoot":""}