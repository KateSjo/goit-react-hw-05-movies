{"version":3,"sources":["components/ImagesList/ImagesList.module.css","components/ImagesList/ImagesList.js","components/Modal/ModalImages.js","views/ImagesViews.js"],"names":["module","exports","ImagesList","images","onModalOpen","length","className","s","gallery","map","index","file_path","onClick","item","card","src","id","alt","ModalImages","modalValue","image","ImagesViews","useState","setImages","modalShow","setModalShow","setModalValue","setIndex","error","setError","imagesId","useParams","slug","match","useEffect","FilmsApi","then","backdrops","catch","toggleModal","value","message","Modal","onClose"],"mappings":"4HACAA,EAAOC,QAAU,CAAC,QAAU,4BAA4B,KAAO,yBAAyB,KAAO,2B,yFCmChFC,EAjCI,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,YAG1B,OAAsB,IAAlBD,EAAOE,OACA,yDAIP,oBAAIC,UAAWC,IAAEC,QAAjB,SACKL,EAAOM,KAAI,WAAgBC,GAAhB,IAAGC,EAAH,EAAGA,UAAH,OACR,oBACIC,QAAS,kBAAIR,EAAYO,EAAUD,IACnCJ,UAAWC,IAAEM,KAFjB,SAII,qBACIP,UAAWC,IAAEO,KACbC,IAfF,kCAemBJ,EACjBK,GAAIN,EACJO,IAAKN,KALJA,S,yBCDVO,EAZK,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,WAAwB,EAAZT,MAG/B,OACI,qBAAKJ,UAAWC,IAAEa,MAAOL,IAHX,kCAG4BI,EAAYF,IAAKE,K,QCwCpDE,UAxCK,WAChB,MAA4BC,mBAAS,IAArC,mBAAOnB,EAAP,KAAeoB,EAAf,KACA,EAAkCD,oBAAS,GAA3C,mBAAOE,EAAP,KAAkBC,EAAlB,KACA,EAAoCH,mBAAS,IAA7C,mBAAOH,EAAP,KAAmBO,EAAnB,KACA,EAA0BJ,mBAAS,MAAnC,mBAAOZ,EAAP,KAAciB,EAAd,KACA,EAA0BL,mBAAS,IAAnC,mBAAOM,EAAP,KAAcC,EAAd,KAEMC,EADWC,cAATC,KACcC,MAAM,iBAAiB,GAE7CC,qBAAU,WACNC,IACsBL,GACjBM,MAAK,gBAAEC,EAAF,EAAEA,UAAF,OAAgBd,EAAUc,MAE/BC,OAAM,SAAAV,GAAK,OAAIC,EAASD,QAE9B,CAACE,IAEJ,IAAMS,EAAc,SAACC,EAAM9B,GACvBe,GAAcD,GACdE,EAAcc,GACdb,EAASjB,IAGb,OACI,qCACKkB,GAAS,6BAAKA,EAAMa,UACpBtC,GAAU,cAAC,EAAD,CAAYA,OAAQA,EAAQC,YAAamC,IACnDf,GAEG,cAACkB,EAAA,EAAD,CACIC,QAASJ,EAAa7B,MAAOA,EADjC,SAGI,cAAC,EAAD,CAAaS,WAAYA","file":"static/js/images-view.d9ef5d7b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"gallery\":\"ImagesList_gallery__okGm5\",\"item\":\"ImagesList_item__393ek\",\"card\":\"ImagesList_card__1nkVU\"};","import PropTypes from 'prop-types';\r\nimport s from \"./ImagesList.module.css\";\r\n\r\nconst ImagesList = ({ images, onModalOpen }) => {\r\n    const IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\r\n\r\n    if (images.length === 0) {\r\n        return <h2>Sorry, we have no image</h2>\r\n    }\r\n\r\n    return (\r\n        <ul className={s.gallery}>\r\n            {images.map(({ file_path }, index) =>\r\n                <li\r\n                    onClick={()=>onModalOpen(file_path,index)}\r\n                    className={s.item}\r\n                    key={file_path}>\r\n                    <img\r\n                        className={s.card}\r\n                        src={IMAGE_URL + file_path}\r\n                        id={index}\r\n                        alt={file_path}\r\n                    />\r\n                </li>\r\n            )}\r\n        </ul>\r\n    );\r\n};\r\n\r\nImagesList.propTypes = {\r\n    images: PropTypes.arrayOf(PropTypes.shape({\r\n        file_path: PropTypes.string,\r\n    })),\r\n    onModalOpen: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImagesList;","import PropTypes from 'prop-types';\r\nimport s from \"./Modal.module.css\";\r\n\r\nconst ModalImages = ({ modalValue, index }) => {\r\n    const IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\r\n    \r\n    return (\r\n        <img className={s.image} src={IMAGE_URL + modalValue} alt={modalValue} />\r\n    );\r\n};\r\n\r\nModalImages.propTypes = {\r\n    modalValue: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ModalImages;","import { useParams } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\nimport ImagesList from \"../components/ImagesList\";\r\nimport Modal from \"../components/Modal\";\r\nimport ModalImages from \"../components/Modal/ModalImages\";\r\nimport * as FilmsApi from \"../service/apiFilmsService\";\r\n\r\nconst ImagesViews = () => {\r\n    const [images, setImages] = useState([]);\r\n    const [modalShow, setModalShow] = useState(false);\r\n    const [modalValue, setModalValue] = useState('');\r\n    const [index, setIndex] = useState(null)\r\n    const [error, setError] = useState('');\r\n    const { slug } = useParams();\r\n    const imagesId = slug.match(/[a-zA-Z0-9]+$/)[0];\r\n    \r\n    useEffect(() => {\r\n        FilmsApi\r\n            .fetchImagesMovie(imagesId)\r\n            .then(({backdrops})=> setImages(backdrops) \r\n            )\r\n            .catch(error => setError(error)\r\n            )\r\n    }, [imagesId])\r\n\r\n    const toggleModal = (value,index) => {\r\n        setModalShow(!modalShow);\r\n        setModalValue(value);\r\n        setIndex(index)\r\n    };\r\n    \r\n    return (\r\n        <>\r\n            {error && <h1>{error.message}</h1>}\r\n            {images && <ImagesList images={images} onModalOpen={toggleModal}/>}\r\n            {modalShow &&\r\n                (\r\n                <Modal\r\n                    onClose={toggleModal} index={index}\r\n                >\r\n                    <ModalImages modalValue={modalValue}/>\r\n                    </Modal>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ImagesViews;"],"sourceRoot":""}